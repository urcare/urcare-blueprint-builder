
import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { 
  FileText, 
  AlertCircle, 
  CheckCircle, 
  Clock,
  User,
  Stethoscope,
  ArrowRight,
  Send
} from 'lucide-react';

interface ConsentTrigger {
  id: string;
  patientName: string;
  procedure: string;
  triggerType: 'procedure' | 'risk_level' | 'time_based' | 'manual';
  urgency: 'urgent' | 'high' | 'normal' | 'low';
  consentType: string;
  riskLevel: number;
  estimatedTime: string;
  autoGenerated: boolean;
  status: 'pending' | 'sent' | 'signed' | 'expired';
}

const mockTriggers: ConsentTrigger[] = [
  {
    id: 'CT001',
    patientName: 'Sarah Johnson',
    procedure: 'Cardiac Catheterization',
    triggerType: 'procedure',
    urgency: 'urgent',
    consentType: 'Invasive Procedure Consent',
    riskLevel: 85,
    estimatedTime: '2 mins',
    autoGenerated: true,
    status: 'pending'
  },
  {
    id: 'CT002',
    patientName: 'Michael Brown',
    procedure: 'MRI Brain with Contrast',
    triggerType: 'risk_level',
    urgency: 'high',
    consentType: 'Contrast Media Consent',
    riskLevel: 42,
    estimatedTime: '1 min',
    autoGenerated: true,
    status: 'sent'
  }
];

export const SmartConsentTriggerInterface = () => {
  const [triggers] = useState<ConsentTrigger[]>(mockTriggers);
  const [selectedTrigger, setSelectedTrigger] = useState<ConsentTrigger | null>(null);

  const getUrgencyColor = (urgency: string) => {
    switch (urgency) {
      case 'urgent': return 'bg-red-500 text-white';
      case 'high': return 'bg-orange-500 text-white';
      case 'normal': return 'bg-blue-500 text-white';
      case 'low': return 'bg-green-500 text-white';
      default: return 'bg-gray-500 text-white';
    }
  };

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'pending': return 'bg-yellow-500 text-white';
      case 'sent': return 'bg-blue-500 text-white';
      case 'signed': return 'bg-green-500 text-white';
      case 'expired': return 'bg-red-500 text-white';
      default: return 'bg-gray-500 text-white';
    }
  };

  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <FileText className="h-5 w-5" />
            Smart Consent Trigger Interface
          </CardTitle>
          <CardDescription>
            Automated consent prompts with intelligent document generation and approval workflows
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid gap-4 mb-6">
            <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
              <Card className="p-4 border-orange-200 bg-orange-50">
                <div className="flex items-center gap-2">
                  <AlertCircle className="h-8 w-8 text-orange-600" />
                  <div>
                    <p className="text-2xl font-bold text-orange-600">{triggers.filter(t => t.status === 'pending').length}</p>
                    <p className="text-sm text-gray-600">Pending Consents</p>
                  </div>
                </div>
              </Card>
              <Card className="p-4 border-blue-200 bg-blue-50">
                <div className="flex items-center gap-2">
                  <Send className="h-8 w-8 text-blue-600" />
                  <div>
                    <p className="text-2xl font-bold text-blue-600">{triggers.filter(t => t.autoGenerated).length}</p>
                    <p className="text-sm text-gray-600">Auto-Generated</p>
                  </div>
                </div>
              </Card>
              <Card className="p-4 border-green-200 bg-green-50">
                <div className="flex items-center gap-2">
                  <CheckCircle className="h-8 w-8 text-green-600" />
                  <div>
                    <p className="text-2xl font-bold text-green-600">94%</p>
                    <p className="text-sm text-gray-600">Success Rate</p>
                  </div>
                </div>
              </Card>
              <Card className="p-4 border-purple-200 bg-purple-50">
                <div className="flex items-center gap-2">
                  <Clock className="h-8 w-8 text-purple-600" />
                  <div>
                    <p className="text-2xl font-bold text-purple-600">1.3 min</p>
                    <p className="text-sm text-gray-600">Avg Generation Time</p>
                  </div>
                </div>
              </Card>
            </div>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
            <div className="space-y-4">
              <h3 className="text-lg font-semibold">Active Consent Triggers</h3>
              {triggers.map((trigger) => (
                <Card 
                  key={trigger.id} 
                  className={`cursor-pointer transition-colors ${selectedTrigger?.id === trigger.id ? 'ring-2 ring-blue-500' : ''} border-l-4 border-l-blue-400`}
                  onClick={() => setSelectedTrigger(trigger)}
                >
                  <CardContent className="p-4">
                    <div className="flex justify-between items-start mb-3">
                      <div>
                        <div className="flex items-center gap-2 mb-1">
                          <User className="h-4 w-4 text-gray-500" />
                          <h4 className="font-semibold">{trigger.patientName}</h4>
                        </div>
                        <div className="flex items-center gap-2 mb-2">
                          <Stethoscope className="h-4 w-4 text-gray-500" />
                          <p className="text-sm text-gray-600">{trigger.procedure}</p>
                        </div>
                        <p className="text-sm font-medium text-blue-600">{trigger.consentType}</p>
                      </div>
                      <div className="flex flex-col gap-2">
                        <Badge className={getUrgencyColor(trigger.urgency)}>
                          {trigger.urgency.toUpperCase()}
                        </Badge>
                        <Badge className={getStatusColor(trigger.status)}>
                          {trigger.status.toUpperCase()}
                        </Badge>
                      </div>
                    </div>
                    
                    <div className="space-y-2">
                      <div className="flex items-center justify-between text-sm">
                        <span>Risk Level</span>
                        <span className="font-bold">{trigger.riskLevel}%</span>
                      </div>
                      <Progress value={trigger.riskLevel} className="h-2" />
                      
                      <div className="flex justify-between items-center mt-3">
                        <div className="flex items-center gap-1 text-sm text-gray-500">
                          <Clock className="h-3 w-3" />
                          <span>Est. {trigger.estimatedTime}</span>
                        </div>
                        {trigger.autoGenerated && (
                          <Badge variant="outline" className="text-xs">
                            Auto-Generated
                          </Badge>
                        )}
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ))}
            </div>

            <div>
              {selectedTrigger ? (
                <Card>
                  <CardHeader>
                    <CardTitle className="text-lg">{selectedTrigger.patientName} - Consent Details</CardTitle>
                    <CardDescription>{selectedTrigger.procedure}</CardDescription>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-4">
                      <div className="grid grid-cols-2 gap-4">
                        <div>
                          <h4 className="font-medium mb-2">Trigger Information</h4>
                          <div className="space-y-1 text-sm">
                            <p>Type: <strong>{selectedTrigger.triggerType.replace('_', ' ')}</strong></p>
                            <p>Urgency: <strong>{selectedTrigger.urgency}</strong></p>
                            <p>Risk Level: <strong>{selectedTrigger.riskLevel}%</strong></p>
                          </div>
                        </div>
                        <div>
                          <h4 className="font-medium mb-2">Workflow Status</h4>
                          <div className="space-y-1 text-sm">
                            <p>Status: <strong>{selectedTrigger.status}</strong></p>
                            <p>Auto-Generated: <strong>{selectedTrigger.autoGenerated ? 'Yes' : 'No'}</strong></p>
                            <p>Est. Time: <strong>{selectedTrigger.estimatedTime}</strong></p>
                          </div>
                        </div>
                      </div>
                      
                      <div>
                        <h4 className="font-medium mb-2">Consent Document</h4>
                        <p className="text-sm bg-blue-50 p-3 rounded">{selectedTrigger.consentType}</p>
                      </div>
                      
                      <div>
                        <h4 className="font-medium mb-2">AI-Generated Content Preview</h4>
                        <div className="text-sm bg-gray-50 p-3 rounded space-y-2">
                          <p><strong>Risk Summary:</strong> Based on patient history and procedure complexity, moderate risk factors identified.</p>
                          <p><strong>Key Points:</strong> Allergies, previous procedures, current medications reviewed.</p>
                          <p><strong>Required Signatures:</strong> Patient, Guardian (if applicable), Witness.</p>
                        </div>
                      </div>
                      
                      <div className="flex gap-2">
                        <Button>
                          <Send className="h-4 w-4 mr-1" />
                          Send for Signature
                        </Button>
                        <Button variant="outline">
                          <FileText className="h-4 w-4 mr-1" />
                          Preview Document
                        </Button>
                        <Button variant="outline">
                          <Clock className="h-4 w-4 mr-1" />
                          Schedule Reminder
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              ) : (
                <Card>
                  <CardContent className="p-8 text-center">
                    <p className="text-gray-500">Select a consent trigger to view detailed workflow information</p>
                  </CardContent>
                </Card>
              )}
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};
